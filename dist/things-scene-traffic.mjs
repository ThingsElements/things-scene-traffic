import{RectPath as t,Shape as e,Component as a}from"@hatiolab/things-scene";const s={mutable:!1,resizable:!0,rotatable:!0,properties:[{type:"color",label:"Ray color",name:"rayColor"}]};class i{constructor(t,e,a){this.id=t,this.startedAt=Date.now(),this.ttl=a;var s=Math.random()*Math.PI*2;this.line={x1:0,y1:0,x2:0+e*Math.cos(s),y2:0+e*Math.sin(s)}}get endedAt(){return this.startedAt+this.ttl}end(){this.ended=!0}get ray(){var t=Date.now(),e=this.startedAt,a=(t-e)/(this.endedAt-e);this.ended&&(a=Math.min(1,this.lastRatio+.05)),this.lastRatio||(this.lastRatio=0);var{x1:s,y1:i,x2:r,y2:h}=this.line,o={x1:s+(r-s)*this.lastRatio,y1:i+(h-i)*this.lastRatio,x2:s+(r-s)*a,y2:i+(h-i)*a};return this.lastRatio=a,o}}class r extends(t(e)){dispose(){this._rap&&(cancelAnimationFrame(this._rap),delete this._rap),super.dispose()}ready(){this._rap=requestAnimationFrame(()=>{this.ready()}),this.invalidate()}get rays(){return this._rays||(this._rays={}),this._rays}cometCreated(t,e){this.rays[t]=e}cometDestroyed(t){var e=this.rays[t];e&&e.end()}_draw(t){var{top:e,left:a,height:s,width:i}=this.bounds,{x:r,y:h}=this.center;t.beginPath(),t.fillStyle=this.getState("fillStyle")||"black",t.rect(a,e,i,s),t.clip(),t.fill(),t.lineCap="round",Object.values(this.rays).forEach(e=>{let a=e.ray;if(!e.ended&&e.lastRatio>=1)return void delete this.rays[e.id];let s=Math.round(10*e.lastRatio),i=this.getState("rayColor")||"#5577aa";if(!e.ended){i=`#${Math.round(255*e.lastRatio).toString(16).padStart(2,"0")}2233`}t.save(),t.beginPath(),t.lineWidth=1+s/(e.ended?3:1),t.strokeStyle=i,t.globalAlpha=e.lastRatio%1,t.moveTo(r+a.x1,h+a.y1),t.lineTo(r+a.x2,h+a.y2),t.stroke(),t.restore(),e.ended&&e.lastRatio>=1&&delete this.rays[e.id]})}_post_draw(){}get controls(){}get nature(){return s}handleQueueIn(t){var{id:e,ttl:a,intime:s}=t,{width:r,height:h}=this.bounds;this.cometCreated(e,new i(e,Math.sqrt(r*r+h*h)/3,a))}handleConsume(t){var{id:e}=t;this.cometDestroyed(e)}handleTimeout(){}onchangeData(t,e){var{data:a}=t;a&&(!a instanceof Array&&(a=[a]),a.forEach(t=>{switch(t.type){case"publish":this.handleQueueIn(t);break;case"consume":this.handleConsume(t);break;case"timeout":this.handleTimeout(t)}}),this.invalidate())}onchange(t,e){}}a.register("traffic-galaxy",r);export{r as TrafficGalaxy};
